{"version":3,"sources":["components/GameOptions/styledComponents.js","components/GameOptions/index.js","components/RockPaperScissors/styledComponents.js","components/RockPaperScissors/index.js","App.js","index.js"],"names":["OptionImage","styled","img","withConfig","displayName","componentId","OptionListItem","li","GameOptionButton","button","GameOptions","props","optionDetails","onClickSetUserChoice","image","id","_jsx","children","type","onClick","concat","toLowerCase","src","alt","AppContainer","div","ResultContainer","Option","h1","OptionsContainer","ScoreContainer","ScorePhrase","p","ScoreNumber","GameViewContainer","GameOptionsList","ul","TriggerButton","PopupContainer","CloseButton","PopUpImage","PopUpBody","GameResultViewContainer","SelectedOptionsContainer","GameUserOptionContainer","GameParticipantText","GameParticipantChoiceImage","ResultText","PlayAgainButton","gameStatusConstants","RockPaperScissors","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","state","score","gameStatus","userChoice","gameChoice","setState","getGameChoice","evaluateGame","onClickGoToGameView","choicesList","map","choice","Math","floor","random","_this$state","prevState","renderGameInProgressView","eachOption","renderGameWonView","_this$state2","userChoiceObject","filter","gameChoiceObject","_jsxs","renderGameLostView","_this$state3","renderGameDrawView","_this$state4","renderGameView","_inherits","_createClass","key","value","this","Popup","modal","trigger","closeOnEscape","window","close","RiCloseLine","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30dd3b69.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const OptionImage = styled.img`\n  width: 170px;\n  height: 170px;\n`\nexport const OptionListItem = styled.li`\n  list-style-type: none;\n  display: flex;\n`\nexport const GameOptionButton = styled.button`\n  outline: none;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n`\n","import {OptionImage, OptionListItem, GameOptionButton} from './styledComponents'\n\nconst GameOptions = props => {\n  const {optionDetails, onClickSetUserChoice} = props\n  const {image, id} = optionDetails\n  const userChoice = () => {\n    onClickSetUserChoice(id)\n  }\n  return (\n    <OptionListItem>\n      <GameOptionButton\n        type=\"button\"\n        onClick={userChoice}\n        data-testid={`${id.toLowerCase()}Button`}\n      >\n        <OptionImage src={image} alt={id} />\n      </GameOptionButton>\n    </OptionListItem>\n  )\n}\n\nexport default GameOptions\n","import styled from 'styled-components'\n\nexport const AppContainer = styled.div`\n  background-color: #223a5f;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const ResultContainer = styled.div`\n  padding: 20px;\n  border: 2px solid #ffffff;\n  border-radius: 10px;\n  width: 65%;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 60px;\n  align-items: center;\n`\nexport const Option = styled.h1`\n  font-size: 18px;\n  font-family: 'Bree Serif';\n  font-weight: 700;\n  color: #ffffff;\n`\n\nexport const OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nexport const ScoreContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #ffffff;\n  padding-left: 30px;\n  padding-right: 30px;\n  border-radius: 10px;\n`\nexport const ScorePhrase = styled.p`\n  font-size: 16px;\n  font-family: 'Bree Serif';\n  font-weight: 700;\n  color: #223a5f;\n`\nexport const ScoreNumber = styled.p`\n  font-size: 28px;\n  font-family: 'Roboto';\n  font-weight: 700;\n  color: #223a5f;\n`\nexport const GameViewContainer = styled.div`\n  width: 65%;\n  height: 60vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const GameOptionsList = styled.ul`\n  padding-left: 0px;\n  margin-left: 0px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  max-width: 480px;\n  flex-wrap: wrap;\n`\nexport const TriggerButton = styled.button`\n  font-size: 16px;\n  font-weight: 400;\n  font-family: 'Roboto';\n  color: #223a5f;\n  padding: 8px 15px 8px 15px;\n  margin: 8px;\n  background-color: #ffffff;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  cursor: pointer;\n`\nexport const PopupContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`\nexport const CloseButton = styled.button`\n  border: none;\n  cursor: pointer;\n  outline: none;\n  background-color: transparent;\n`\nexport const PopUpImage = styled.img`\n  width: 90%;\n  align-self: center;\n`\nexport const PopUpBody = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 20px;\n`\nexport const GameResultViewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 560px;\n  justify-content: center;\n`\nexport const SelectedOptionsContainer = styled.div`\n  display: flex;\n  width: 80%;\n  max-width: 600px;\n  justify-content: space-between;\n`\nexport const GameUserOptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nexport const GameParticipantText = styled.p`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 700;\n  font-family: 'Roboto';\n`\n\nexport const GameParticipantChoiceImage = styled.img`\n  width: 170px;\n  height: 170px;\n`\nexport const ResultText = styled.p`\n  color: #ffffff;\n  font-size: 24px;\n  font-weight: 700;\n  font-family: 'Roboto';\n  text-align: center;\n`\n\nexport const PlayAgainButton = styled.button`\n  font-size: 16px;\n  font-weight: 400;\n  font-family: 'Roboto';\n  color: #223a5f;\n  padding: 8px 15px 8px 15px;\n  margin: 8px;\n  background-color: #ffffff;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  cursor: pointer;\n  align-self: center;\n`\n","import {Component} from 'react'\n\nimport {RiCloseLine} from 'react-icons/ri'\n\nimport Popup from 'reactjs-popup'\n\nimport 'reactjs-popup/dist/index.css'\n\nimport GameOptions from '../GameOptions'\n\nimport {\n  AppContainer,\n  ResultContainer,\n  OptionsContainer,\n  Option,\n  ScoreContainer,\n  ScorePhrase,\n  ScoreNumber,\n  GameViewContainer,\n  GameOptionsList,\n  PopupContainer,\n  TriggerButton,\n  CloseButton,\n  PopUpImage,\n  PopUpBody,\n  GameResultViewContainer,\n  SelectedOptionsContainer,\n  GameUserOptionContainer,\n  GameParticipantText,\n  GameParticipantChoiceImage,\n  ResultText,\n  PlayAgainButton,\n} from './styledComponents'\n\nconst gameStatusConstants = {\n  inProgress: 'IN_PROGRESS',\n  win: 'WIN',\n  lost: 'LOST',\n  draw: 'DRAW',\n}\n\nclass RockPaperScissors extends Component {\n  state = {\n    score: 0,\n    gameStatus: gameStatusConstants.inProgress,\n    userChoice: '',\n    gameChoice: '',\n  }\n\n  onClickSetUserChoice = id => {\n    this.setState(\n      {userChoice: id, gameChoice: this.getGameChoice()},\n      this.evaluateGame,\n    )\n  }\n\n  onClickGoToGameView = () => {\n    this.setState({gameStatus: gameStatusConstants.inProgress})\n  }\n\n  getGameChoice = () => {\n    const {choicesList} = this.props\n    const gameChoicesList = choicesList.map(choice => choice.id)\n    const randomIndex = Math.floor(Math.random() * 3)\n    return gameChoicesList[randomIndex]\n  }\n\n  evaluateGame = () => {\n    const {userChoice, gameChoice} = this.state\n\n    if (userChoice === gameChoice) {\n      this.setState({gameStatus: gameStatusConstants.draw})\n    } else if (userChoice === 'ROCK') {\n      if (gameChoice === 'SCISSORS') {\n        this.setState(prevState => ({\n          gameStatus: gameStatusConstants.win,\n          score: prevState.score + 1,\n        }))\n      } else {\n        this.setState(prevState => ({\n          gameStatus: gameStatusConstants.lost,\n          score: prevState.score - 1,\n        }))\n      }\n    } else if (userChoice === 'PAPER') {\n      if (gameChoice === 'ROCK') {\n        this.setState(prevState => ({\n          gameStatus: gameStatusConstants.win,\n          score: prevState.score + 1,\n        }))\n      } else {\n        this.setState(prevState => ({\n          gameStatus: gameStatusConstants.lost,\n          score: prevState.score - 1,\n        }))\n      }\n    } else if (userChoice === 'SCISSORS') {\n      if (gameChoice === 'PAPER') {\n        this.setState(prevState => ({\n          gameStatus: gameStatusConstants.win,\n          score: prevState.score + 1,\n        }))\n      } else {\n        this.setState(prevState => ({\n          gameStatus: gameStatusConstants.lost,\n          score: prevState.score - 1,\n        }))\n      }\n    }\n  }\n\n  renderGameInProgressView = () => {\n    const {choicesList} = this.props\n    return (\n      <GameOptionsList>\n        {choicesList.map(eachOption => (\n          <GameOptions\n            key={eachOption.id}\n            optionDetails={eachOption}\n            onClickSetUserChoice={this.onClickSetUserChoice}\n          />\n        ))}\n      </GameOptionsList>\n    )\n  }\n\n  renderGameWonView = () => {\n    const {gameChoice, userChoice} = this.state\n    const {choicesList} = this.props\n    const userChoiceObjectLIST = choicesList.filter(\n      choice => choice.id === userChoice,\n    )\n    const userChoiceObject = userChoiceObjectLIST[0]\n    const gameChoiceObjectLIST = choicesList.filter(\n      choice => choice.id === gameChoice,\n    )\n    const gameChoiceObject = gameChoiceObjectLIST[0]\n\n    return (\n      <GameResultViewContainer>\n        <SelectedOptionsContainer>\n          <GameUserOptionContainer>\n            <GameParticipantText>You</GameParticipantText>\n            <GameParticipantChoiceImage\n              src={userChoiceObject.image}\n              alt=\"your choice\"\n            />\n          </GameUserOptionContainer>\n          <GameUserOptionContainer>\n            <GameParticipantText>Other</GameParticipantText>\n            <GameParticipantChoiceImage\n              src={gameChoiceObject.image}\n              alt=\"opponent choice\"\n            />\n          </GameUserOptionContainer>\n        </SelectedOptionsContainer>\n        <ResultText>YOU WON</ResultText>\n        <PlayAgainButton type=\"button\" onClick={this.onClickGoToGameView}>\n          PLAY AGAIN\n        </PlayAgainButton>\n      </GameResultViewContainer>\n    )\n  }\n\n  renderGameLostView = () => {\n    const {gameChoice, userChoice} = this.state\n    const {choicesList} = this.props\n    const userChoiceObjectLIST = choicesList.filter(\n      choice => choice.id === userChoice,\n    )\n    const userChoiceObject = userChoiceObjectLIST[0]\n    const gameChoiceObjectLIST = choicesList.filter(\n      choice => choice.id === gameChoice,\n    )\n    const gameChoiceObject = gameChoiceObjectLIST[0]\n\n    return (\n      <GameResultViewContainer>\n        <SelectedOptionsContainer>\n          <GameUserOptionContainer>\n            <GameParticipantText>You</GameParticipantText>\n            <GameParticipantChoiceImage\n              src={userChoiceObject.image}\n              alt=\"your choice\"\n            />\n          </GameUserOptionContainer>\n          <GameUserOptionContainer>\n            <GameParticipantText>Other</GameParticipantText>\n            <GameParticipantChoiceImage\n              src={gameChoiceObject.image}\n              alt=\"opponent choice\"\n            />\n          </GameUserOptionContainer>\n        </SelectedOptionsContainer>\n        <ResultText>YOU LOSE</ResultText>\n        <PlayAgainButton type=\"button\" onClick={this.onClickGoToGameView}>\n          PLAY AGAIN\n        </PlayAgainButton>\n      </GameResultViewContainer>\n    )\n  }\n\n  renderGameDrawView = () => {\n    const {gameChoice, userChoice} = this.state\n    const {choicesList} = this.props\n    const userChoiceObjectLIST = choicesList.filter(\n      choice => choice.id === userChoice,\n    )\n    const userChoiceObject = userChoiceObjectLIST[0]\n    const gameChoiceObjectLIST = choicesList.filter(\n      choice => choice.id === gameChoice,\n    )\n    const gameChoiceObject = gameChoiceObjectLIST[0]\n\n    return (\n      <GameResultViewContainer>\n        <SelectedOptionsContainer>\n          <GameUserOptionContainer>\n            <GameParticipantText>You</GameParticipantText>\n            <GameParticipantChoiceImage\n              src={userChoiceObject.image}\n              alt=\"your choice\"\n            />\n          </GameUserOptionContainer>\n          <GameUserOptionContainer>\n            <GameParticipantText>Other</GameParticipantText>\n            <GameParticipantChoiceImage\n              src={gameChoiceObject.image}\n              alt=\"opponent choice\"\n            />\n          </GameUserOptionContainer>\n        </SelectedOptionsContainer>\n        <ResultText>IT IS DRAW</ResultText>\n        <PlayAgainButton type=\"button\" onClick={this.onClickGoToGameView}>\n          PLAY AGAIN\n        </PlayAgainButton>\n      </GameResultViewContainer>\n    )\n  }\n\n  renderGameView = () => {\n    const {gameStatus} = this.state\n    switch (gameStatus) {\n      case gameStatusConstants.inProgress:\n        return this.renderGameInProgressView()\n      case gameStatusConstants.win:\n        return this.renderGameWonView()\n      case gameStatusConstants.lost:\n        return this.renderGameLostView()\n      case gameStatusConstants.draw:\n        return this.renderGameDrawView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {score} = this.state\n\n    return (\n      <AppContainer>\n        <ResultContainer>\n          <OptionsContainer>\n            <Option>\n              ROCK\n              <br />\n              <br />\n              PAPER\n              <br />\n              <br />\n              SCISSORS\n            </Option>\n          </OptionsContainer>\n          <ScoreContainer>\n            <ScorePhrase>Score</ScorePhrase>\n            <ScoreNumber>{score}</ScoreNumber>\n          </ScoreContainer>\n        </ResultContainer>\n        <GameViewContainer>{this.renderGameView()}</GameViewContainer>\n        <PopupContainer>\n          <Popup\n            modal\n            trigger={<TriggerButton type=\"button\">Rules</TriggerButton>}\n            closeOnEscape\n            window\n          >\n            {close => (\n              <PopUpBody>\n                <PopUpImage\n                  src=\"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png\"\n                  alt=\"rules\"\n                />\n\n                <CloseButton type=\"button\" onClick={() => close()}>\n                  <RiCloseLine />\n                </CloseButton>\n              </PopUpBody>\n            )}\n          </Popup>\n        </PopupContainer>\n      </AppContainer>\n    )\n  }\n}\nexport default RockPaperScissors\n","import './App.css'\nimport RockPaperScissors from './components/RockPaperScissors'\n\nconst choicesList = [\n  {\n    id: 'ROCK',\n    image:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',\n  },\n  {\n    id: 'SCISSORS',\n    image:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',\n  },\n  {\n    id: 'PAPER',\n    image:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',\n  },\n]\n\nconst App = () => <RockPaperScissors choicesList={choicesList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}